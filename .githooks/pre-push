#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).
echo >&2 "Starting git hook execution"
deployment_branch="master"
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
if [ "$current_branch" = "$deployment_branch" ]
    then
	echo >&2 "On $deployment_branch, starting website deployment"
	npm run deploy
	echo >&2 "Website deployment finished. Pushing code to $deployment_branch."
    else
	echo >&2 "Not publishing this push to GitHub Pages as not on branch $deployment_branch (current branch: $current_branch)"
    fi
exit 0
